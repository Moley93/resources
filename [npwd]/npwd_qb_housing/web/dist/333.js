"use strict";(self.webpackChunknpwd_qb_housing=self.webpackChunknpwd_qb_housing||[]).push([[333],{9440:(e,t,n)=>{n.d(t,{Ev:()=>d,kt:()=>g,LT:()=>m,Ax:()=>v,nx:()=>p,_Z:()=>f,Kq:()=>x,Ng:()=>h,xB:()=>y});var r=n(5137),a=[{id:1,label:"Signal St 2",coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}}},{id:2,label:"Didion Dr 3",coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}}}],o=[{id:1,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:2,house:"orchardville ave1",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Orchardville Ave 1",tier:2,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:3,house:"didion dr3",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Didion Dr 3",tier:6,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:-1576.087646484375,h:218.99258422851562,x:1352.541259765625,z:54.01376342773437}},{id:1345,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:16544,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:1654,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:152,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:134,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}}],i=n(5181),l=n(7405),s=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function l(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},u={houseItems:(0,r.atom)({key:"houseItem",default:(0,r.selector)({key:"defaultHouseItems",get:function(){return s(void 0,void 0,void 0,(function(){var e,t;return c(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,(0,l.Z)("npwd:qb-housing:getPlayerHouses")];case 1:return(e=n.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t=n.sent(),(0,i.Id)()?[2,o]:(console.error(t),[2,[]]);case 3:return[2]}}))}))}})}),myKeys:(0,r.atom)({key:"myKeys",default:(0,r.selector)({key:"defaultMyKeys",get:function(){return s(void 0,void 0,void 0,(function(){var e,t;return c(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,(0,l.Z)("npwd:qb-housing:getPlayerKeys")];case 1:return(e=n.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t=n.sent(),(0,i.Id)()?[2,a]:(console.error(t),[2,[]]);case 3:return[2]}}))}))}})}),selectedHouse:(0,r.atom)({key:"selectedHouse",default:null}),houseListModal:(0,r.atom)({key:"houseListModal",default:!1}),modalType:(0,r.atom)({key:"modalType",default:""})},d=function(){return(0,r.useRecoilValue)(u.houseItems)},f=function(){return(0,r.useSetRecoilState)(u.houseItems)},h=function(){return(0,r.useSetRecoilState)(u.houseListModal)},m=function(){return(0,r.useRecoilState)(u.houseListModal)},p=function(){return(0,r.useRecoilValue)(u.selectedHouse)},y=function(){return(0,r.useSetRecoilState)(u.selectedHouse)},x=function(){return(0,r.useSetRecoilState)(u.modalType)},g=function(){return(0,r.useRecoilValue)(u.modalType)},v=function(){return(0,r.useRecoilValue)(u.myKeys)}},1551:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(2950),a=n.n(r),o=n(4274),i=n(1508),l=n(2658);const s=function(){return a().createElement(i.Z,{px:2,pt:2,sx:{width:"100%",textAlign:"left",backgroundColor:o.Gy}},a().createElement(l.Z,{sx:{color:o.cX},paragraph:!0,variant:"h5"},"Properties"))}},4362:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(2950),a=n.n(r),o=n(9440),i=n(2440),l=n(799),s=n(1508),c=n(8584),u=n(7241),d=n(6867),f=n(55),h=n(594),m=n(6638),p=n(9469),y=n(3938),x=n(3852);const g=function(e){var t=e.isDarkMode,n=(0,o.Ev)(),r=(0,o.Ng)(),g=(0,o.Kq)(),v=(0,o.xB)(),b=function(e,t){r(!0),v(e),g(t)};return a().createElement(i.Z,{disablePadding:!0,sx:{overflow:"auto"}},n.map((function(e){return a().createElement(l.ZP,{key:e.id,divider:!0},a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",width:"100%"}},a().createElement(s.Z,{sx:{borderRadius:"5px",width:"100%",display:"flex",flexDirection:"row",gap:"20px",alignItems:"center",paddingY:"2px"}},a().createElement(m.Z,{sx:{fontSize:32,color:t?"#fff":"#000"}}),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"column",marginTop:"2px",gap:"4px"}},a().createElement(c.Z,{primaryTypographyProps:{color:t?"#fff":"#000",fontSize:"17px"}},e.label),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"12px"}},a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"5px",alignItems:"center"}},a().createElement(p.Z,{sx:{fontSize:20,color:t?"#fff":"#000"}}),a().createElement(c.Z,{primaryTypographyProps:{color:t?"#fff":"#000",fontSize:"15px"}},e.keyholders.length)),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"5px",alignItems:"center"}},a().createElement(y.Z,{sx:{fontSize:20,color:t?"#fff":"#000"}}),e.garage&&0===e.garage.x&&0===e.garage.z||!e.garage?a().createElement(h.Z,{sx:{fontSize:16,strokeWidth:2,color:t?"#fff":"#000"}}):a().createElement(f.Z,{sx:{fontSize:16,strokeWidth:2,color:t?"#fff":"#000"}}))))),a().createElement(u.Z,{arrow:!0,title:"Key List"},a().createElement(d.Z,{onClick:function(){b(e,"keys")}},a().createElement(p.Z,null))),a().createElement(u.Z,{arrow:!0,title:"Transfer"},a().createElement(d.Z,{onClick:function(){b(e,"transfer")}},a().createElement(x.Z,null)))))})))}},653:(e,t,n)=>{n.d(t,{Z:()=>v});var r=n(2950),a=n.n(r),o=n(6501),i=n(9440),l=n(1508),s=n(2116),c=n(6914),u=n(4390),d=n(3489);const f=function(){var e=(0,r.useState)(""),t=e[0],n=e[1],o=(0,d.h)().transferHouse,s=(0,i.nx)(),f=(0,i.Ng)();return a().createElement(a().Fragment,null,a().createElement(l.Z,{sx:{marginTop:"25px",display:"flex",justifyContent:"center",flexDirection:"column",alignItems:"center",gap:"10px"}},a().createElement(u.Z,{label:"CSN",variant:"outlined",onChange:function(e){return n(e.target.value)}}),a().createElement(c.Z,{variant:"outlined",color:"success",size:"large",sx:{width:"150px",height:"45px",marginTop:"12px"},disabled:8!==t.length,onClick:function(){o(s.house,t).then((function(){f(!1)}))}},"Confirm")))};var h=n(1733),m=n(2440),p=n(799),y=n(2658),x=n(6867);const g=function(){var e=(0,d.h)().removeKey,t=(0,i.nx)();return a().createElement(a().Fragment,null,a().createElement(m.Z,{sx:{maxHeight:"150px",overflow:"auto"},disablePadding:!0},t.keyholders.map((function(n){return a().createElement(p.ZP,{divider:!0,key:n.citizenid},a().createElement(l.Z,{sx:{width:"100%",display:"flex",justifyContent:"space-between"}},n.name.length>25?a().createElement(y.Z,null,n.name.slice(0,25)+"..."):a().createElement(y.Z,null,n.name),a().createElement(x.Z,{sx:{margin:"0px",padding:"0px"}},a().createElement(h.Z,{onClick:function(){return function(n){e(t.house,n)}(n)}}))))}))))},v=function(){var e=(0,i.LT)(),t=e[0],n=e[1],r=(0,i.nx)(),u=(0,i.kt)();return t&&r&&u?a().createElement(o.Z,{sx:{zIndex:10,position:"absolute",left:"0",right:"0",marginLeft:"auto",marginRight:"auto",top:"25%",width:"75%",minHeight:"250px"}},a().createElement(l.Z,{sx:{display:"flex",justifyContent:"center",marginTop:"10px",color:"#dedede",textTransform:"capitalize"}},u),a().createElement(s.Z,{sx:{padding:"8px"}}),"transfer"===u&&a().createElement(f,null),"keys"===u&&a().createElement(g,null),a().createElement(l.Z,{sx:{display:"flex",justifyContent:"center",alignItems:"center",alignSelf:"flex-end",pb:"10px"}},a().createElement(c.Z,{variant:"outlined",onClick:function(){n(!1)},color:"error",size:"small",sx:{width:"150px",height:"45px",marginTop:"25px"}},"Close"))):null}},352:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(2950),a=n.n(r),o=n(9440);const i=(0,n(381).Z)("div")({background:"black",opacity:"0.6",position:"absolute",top:0,left:0,right:0,bottom:0,zIndex:5}),l=(0,r.memo)((function(){var e=(0,o.LT)(),t=e[0];return e[1],t&&a().createElement(i,null)}))},9275:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(2950),a=n.n(r),o=n(4172),i=n(2004),l=n(6235),s=n(5567),c=n(3894);const u=function(){var e=(0,l.useLocation)().pathname,t=(0,r.useState)(e),n=t[0],u=t[1];return a().createElement(o.Z,{value:n,onChange:function(e,t){u(t)},showLabels:!0,sx:{width:"100%"}},a().createElement(i.Z,{label:"Houses",value:"/housing",component:l.NavLink,icon:a().createElement(s.Z,null),to:"/housing"}),a().createElement(i.Z,{label:"Keys",value:"/housing/keys",color:"secondary",component:l.NavLink,icon:a().createElement(c.Z,null),to:"/housing/keys"}))}},4582:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(2440),a=n(799),o=n(6867),i=n(700),l=n(8584),s=n(2950),c=n.n(s),u=n(9440),d=n(9308),f=n(9469),h=n(3489);const m=function(e){var t=e.isDarkMode,n=(0,u.Ax)(),s=(0,h.h)().setWaypoint;return c().createElement(r.Z,{disablePadding:!0},n.map((function(e){return c().createElement(a.ZP,{key:e.id,divider:!0,secondaryAction:c().createElement(o.Z,{edge:"end","aria-label":"waypoint",onClick:function(){return t=e.coords,void s(t);var t}},c().createElement(d.Z,null))},c().createElement(i.Z,{sx:{minWidth:"0px",marginRight:"8px"}},c().createElement(f.Z,null)),c().createElement(l.Z,{primaryTypographyProps:{color:t?"#fff":"#000"},primary:e.label}))})))}},3489:(e,t,n)=>{n.d(t,{h:()=>u});var r=n(2950),a=n(721),o=n(7405),i=n(9440),l=function(){return l=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},l.apply(this,arguments)},s=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function l(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},u=function(){var e,t,n=(0,a.D)().addAlert,u=(e=(0,i._Z)(),t=(0,i.xB)(),{deleteLocalHouse:(0,r.useCallback)((function(t){e((function(e){return function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}([],e,!0).filter((function(e){return e.house!==t}))}))}),[]),deleteKeyHolder:(0,r.useCallback)((function(n,r){e((function(e){return e.map((function(e){return e.house===n?l(l({},e),{keyholders:e.keyholders.filter((function(e){return e.citizenid!==r}))}):e}))})),t((function(e){return e.house===n?l(l({},e),{keyholders:e.keyholders.filter((function(e){return e.citizenid!==r}))}):e}))}),[])}),d=u.deleteLocalHouse,f=u.deleteKeyHolder,h=(0,r.useCallback)((function(e){return s(void 0,void 0,void 0,(function(){return c(this,(function(t){switch(t.label){case 0:return[4,(0,o.Z)("npwd:qb-housing:setWaypoint",{coords:e.enter})];case 1:return"ok"!==t.sent().status?[2,n({message:"Failed to set waypoint",type:"error"})]:(n({message:"Successfully marked house",type:"success"}),[2])}}))}))}),[n]),m=(0,r.useCallback)((function(e,t){return s(void 0,void 0,void 0,(function(){var r,a,i;return c(this,(function(l){switch(l.label){case 0:return r=t.name.split(" "),a=r[0],i=r[1],[4,(0,o.Z)("npwd:qb-housing:removeKeyHolder",{house:e,HolderData:{citizenid:t.citizenid,firstName:a,lastName:i}})];case 1:return"ok"!==l.sent().status?[2,n({message:"Failed to remove key",type:"error"})]:(n({message:"Successfully removed key",type:"success"}),[2])}}))}))}),[n,f]),p=(0,r.useCallback)((function(e,t){return s(void 0,void 0,void 0,(function(){return c(this,(function(r){switch(r.label){case 0:return[4,(0,o.Z)("npwd:qb-housing:transferHouse",{house:e,citizenid:t})];case 1:return"ok"!==r.sent().status?[2,n({message:"Failed to transfer house",type:"error"})]:(d(e),n({message:"Successfully transfered house",type:"success"}),[2])}}))}))}),[n,d]);return{transferHouse:p,removeKey:m,setWaypoint:h}}},4714:(e,t,n)=>{n.d(t,{v:()=>d});var r=n(2950),a=n.n(r),o=n(9986),i=n(721),l=n(6186),s=n(2658),c=function(){return c=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},c.apply(this,arguments)};const u=(0,r.forwardRef)((function(e,t){return a().createElement(l.Z,c({sx:{zIndex:1e4},elevation:4,variant:"filled"},e,{ref:t}),a().createElement(s.Z,{sx:{maxWidth:"300px",wordWrap:"break-word",fontSize:"1.1em"}},e.children))}));var d=function(){var e,t=(0,i.D)(),n=t.alert,r=t.isOpen,l=t.handleClose;return a().createElement(o.Z,{autoHideDuration:null!==(e=null==n?void 0:n.duration)&&void 0!==e?e:3e3,open:r,sx:{display:"flex",justifyContent:"center",alignItems:"center",height:"auto",position:"absolute",bottom:75,left:"0 !important",right:"0 !important"},onClose:l},a().createElement(u,{severity:(null==n?void 0:n.type)||"info",onClose:l},(null==n?void 0:n.message)||""))}},602:(e,t,n)=>{n.d(t,{S:()=>o,Z:()=>i});var r=n(2950),a=n.n(r),o=(0,r.createContext)(null);const i=function(e){var t=e.children,n=(0,r.useState)(!1),i=n[0],l=n[1],s=(0,r.useState)(null),c=s[0],u=s[1];return a().createElement(o.Provider,{value:{alert:c,addAlert:function(e){u(e),l(!0)},handleClose:function(){l(!1)},isOpen:i}},t)}},721:(e,t,n)=>{n.d(t,{D:()=>o});var r=n(2950),a=n(602),o=function(){return(0,r.useContext)(a.S)}},7405:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(5181);const a=function(e,t,n){return a=this,o=void 0,l=function(){var a;return function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(o){switch(o.label){case 0:return a={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},(0,r.Id)()&&n?[2,n]:[4,fetch("https://".concat("npwd_qb_housing","/").concat(e),a)];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()]}}))},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{s(l.next(e))}catch(e){t(e)}}function r(e){try{s(l.throw(e))}catch(e){t(e)}}function s(t){var a;t.done?e(t.value):(a=t.value,a instanceof i?a:new i((function(e){e(a)}))).then(n,r)}s((l=l.apply(a,o||[])).next())}));var a,o,i,l}},5181:(e,t,n)=>{n.d(t,{Id:()=>r});var r=function(){return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUl3TyxFQUFlLFdBQ3RCLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucHdkX3FiX2hvdXNpbmcvLi9zcmMvdXRpbHMvY29uc3RhbnRzLnRzIiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9hdG9tcy9ob3VzZS1hdG9tcy50cyIsIndlYnBhY2s6Ly9ucHdkX3FiX2hvdXNpbmcvLi9zcmMvY29tcG9uZW50cy9IZWFkZXIudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0hvdXNlTGlzdC9Ib3VzZUxpc3QudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0hvdXNlTGlzdC9tb2RhbC9UcmFuc2Zlci50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL2NvbXBvbmVudHMvSG91c2VMaXN0L21vZGFsL0tleXMudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0hvdXNlTGlzdC9tb2RhbC9Nb2RhbC50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL2NvbXBvbmVudHMvQmFja2Ryb3AudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0hvdXNlTGlzdC9tb2RhbC9Nb2RhbEJhY2tncm91bmQudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0hvdXNpbmdOYXZCYXIudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9jb21wb25lbnRzL0tleUxpc3QvS2V5TGlzdC50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL2hvb2tzL3VzZUhvdXNlQWN0aW9ucy50cyIsIndlYnBhY2s6Ly9ucHdkX3FiX2hvdXNpbmcvLi9zcmMvaG9va3MvdXNlSG91c2VBUEkudHMiLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL3NuYWNrYmFyL0FsZXJ0LnRzeCIsIndlYnBhY2s6Ly9ucHdkX3FiX2hvdXNpbmcvLi9zcmMvc25hY2tiYXIvUGhvbmVTbmFja2Jhci50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL3NuYWNrYmFyL1NuYWNrYmFyUHJvdmlkZXIudHN4Iiwid2VicGFjazovL25wd2RfcWJfaG91c2luZy8uL3NyYy9zbmFja2Jhci91c2VTbmFja2Jhci50cyIsIndlYnBhY2s6Ly9ucHdkX3FiX2hvdXNpbmcvLi9zcmMvdXRpbHMvZmV0Y2hOdWkudHMiLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL3V0aWxzL21pc2MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBNb2NrTXlLZXlzID0gW1xuICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICAgIGxhYmVsOiAnU2lnbmFsIFN0IDInLFxuICAgICAgICBjb29yZHM6IHtcbiAgICAgICAgICAgIGNhbToge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHlhdzogLTEwLjAsXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudGVyOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIGxhYmVsOiAnRGlkaW9uIERyIDMnLFxuICAgICAgICBjb29yZHM6IHtcbiAgICAgICAgICAgIGNhbToge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHlhdzogLTEwLjAsXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudGVyOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9XG5dO1xuZXhwb3J0IHZhciBNb2NrSG91c2VzID0gW1xuICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICAgIGhvdXNlOiAnc2lnbmFsIHN0MicsXG4gICAgICAgIGtleWhvbGRlcnM6IFtcbiAgICAgICAgICAgIHsgbmFtZTogJ1NhbSBTaGFua3MnLCBjaXRpemVuaWQ6ICdXTlAxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1RFc3QgU2hhbmtzJywgY2l0aXplbmlkOiAnVEFGMTgzMjknIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxhYmVsOiAnU2lnbmFsIFN0IDInLFxuICAgICAgICB0aWVyOiAxLFxuICAgICAgICBjb29yZHM6IHtcbiAgICAgICAgICAgIGNhbToge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHlhdzogLTEwLjAsXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudGVyOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZ2FyYWdlOiB7IHk6IDAsIHg6IDAsIGg6IDAsIHo6IDAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIGhvdXNlOiAnb3JjaGFyZHZpbGxlIGF2ZTEnLFxuICAgICAgICBrZXlob2xkZXJzOiBbXG4gICAgICAgICAgICB7IG5hbWU6ICdTYW0gU2hhbmtzJywgY2l0aXplbmlkOiAnV05QMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdURXN0IFNoYW5rcycsIGNpdGl6ZW5pZDogJ1RBRjE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnU2FtIFNoYW5rcycsIGNpdGl6ZW5pZDogJ1dOUDE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnVEVzdCBTaGFua3MnLCBjaXRpemVuaWQ6ICdUQUYxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1NhbSBTaGFua3MnLCBjaXRpemVuaWQ6ICdXTlAxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1RFc3QgU2hhbmtzJywgY2l0aXplbmlkOiAnVEFGMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdTYW0gU2hhbmtzJywgY2l0aXplbmlkOiAnV05QMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdURXN0IFNoYW5rcycsIGNpdGl6ZW5pZDogJ1RBRjE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnU2FtIFNoYW5rcycsIGNpdGl6ZW5pZDogJ1dOUDE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnVEVzdCBTaGFua3MnLCBjaXRpemVuaWQ6ICdUQUYxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1NhbSBTaGFua3MnLCBjaXRpemVuaWQ6ICdXTlAxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1RFc3QgU2hhbmtzJywgY2l0aXplbmlkOiAnVEFGMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdTYW0gU2hhbmtzJywgY2l0aXplbmlkOiAnV05QMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdURXN0IFNoYW5rcycsIGNpdGl6ZW5pZDogJ1RBRjE4MzI5JyB9LFxuICAgICAgICBdLFxuICAgICAgICBsYWJlbDogJ09yY2hhcmR2aWxsZSBBdmUgMScsXG4gICAgICAgIHRpZXI6IDIsXG4gICAgICAgIGNvb3Jkczoge1xuICAgICAgICAgICAgY2FtOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeWF3OiAtMTAuMCxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW50ZXI6IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBnYXJhZ2U6IHsgeTogMCwgeDogMCwgaDogMCwgejogMCB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogMyxcbiAgICAgICAgaG91c2U6ICdkaWRpb24gZHIzJyxcbiAgICAgICAga2V5aG9sZGVyczogW1xuICAgICAgICAgICAgeyBuYW1lOiAnU2FtIFNoYW5rcycsIGNpdGl6ZW5pZDogJ1dOUDE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnVEVzdCBTaGFua3MnLCBjaXRpemVuaWQ6ICdUQUYxODMyOScgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbGFiZWw6ICdEaWRpb24gRHIgMycsXG4gICAgICAgIHRpZXI6IDYsXG4gICAgICAgIGNvb3Jkczoge1xuICAgICAgICAgICAgY2FtOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeWF3OiAtMTAuMCxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW50ZXI6IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBnYXJhZ2U6IHtcbiAgICAgICAgICAgIHk6IC0xNTc2LjA4NzY0NjQ4NDM3NSxcbiAgICAgICAgICAgIGg6IDIxOC45OTI1ODQyMjg1MTU2MyxcbiAgICAgICAgICAgIHg6IDEzNTIuNTQxMjU5NzY1NjI1LFxuICAgICAgICAgICAgejogNTQuMDEzNzYzNDI3NzM0MzcsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlkOiAxMzQ1LFxuICAgICAgICBob3VzZTogJ3NpZ25hbCBzdDInLFxuICAgICAgICBrZXlob2xkZXJzOiBbXG4gICAgICAgICAgICB7IG5hbWU6ICdTYW0gU2hhbmtzJywgY2l0aXplbmlkOiAnV05QMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdURXN0IFNoYW5rcycsIGNpdGl6ZW5pZDogJ1RBRjE4MzI5JyB9LFxuICAgICAgICBdLFxuICAgICAgICBsYWJlbDogJ1NpZ25hbCBTdCAyJyxcbiAgICAgICAgdGllcjogMSxcbiAgICAgICAgY29vcmRzOiB7XG4gICAgICAgICAgICBjYW06IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB5YXc6IC0xMC4wLFxuICAgICAgICAgICAgICAgIHg6IDE1OC41OTUxODQzMjYxNzE4OCxcbiAgICAgICAgICAgICAgICB6OiA3LjIzOTY2MzYwMDkyMTYzLFxuICAgICAgICAgICAgICAgIHk6IC0yOTI4LjE0NjcyODUxNTYyNSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbnRlcjoge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHg6IDE1OC41OTUxODQzMjYxNzE4OCxcbiAgICAgICAgICAgICAgICB6OiA3LjIzOTY2MzYwMDkyMTYzLFxuICAgICAgICAgICAgICAgIHk6IC0yOTI4LjE0NjcyODUxNTYyNSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGdhcmFnZTogeyB5OiAwLCB4OiAwLCBoOiAwLCB6OiAwIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlkOiAxNjU0NCxcbiAgICAgICAgaG91c2U6ICdzaWduYWwgc3QyJyxcbiAgICAgICAga2V5aG9sZGVyczogW1xuICAgICAgICAgICAgeyBuYW1lOiAnU2FtIFNoYW5rcycsIGNpdGl6ZW5pZDogJ1dOUDE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnVEVzdCBTaGFua3MnLCBjaXRpemVuaWQ6ICdUQUYxODMyOScgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbGFiZWw6ICdTaWduYWwgU3QgMicsXG4gICAgICAgIHRpZXI6IDEsXG4gICAgICAgIGNvb3Jkczoge1xuICAgICAgICAgICAgY2FtOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeWF3OiAtMTAuMCxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW50ZXI6IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBnYXJhZ2U6IHsgeTogMCwgeDogMCwgaDogMCwgejogMCB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogMTY1NCxcbiAgICAgICAgaG91c2U6ICdzaWduYWwgc3QyJyxcbiAgICAgICAga2V5aG9sZGVyczogW1xuICAgICAgICAgICAgeyBuYW1lOiAnU2FtIFNoYW5rcycsIGNpdGl6ZW5pZDogJ1dOUDE4MzI5JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnVEVzdCBTaGFua3MnLCBjaXRpemVuaWQ6ICdUQUYxODMyOScgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbGFiZWw6ICdTaWduYWwgU3QgMicsXG4gICAgICAgIHRpZXI6IDEsXG4gICAgICAgIGNvb3Jkczoge1xuICAgICAgICAgICAgY2FtOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeWF3OiAtMTAuMCxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW50ZXI6IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB4OiAxNTguNTk1MTg0MzI2MTcxODgsXG4gICAgICAgICAgICAgICAgejogNy4yMzk2NjM2MDA5MjE2MyxcbiAgICAgICAgICAgICAgICB5OiAtMjkyOC4xNDY3Mjg1MTU2MjUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBnYXJhZ2U6IHsgeTogMCwgeDogMCwgaDogMCwgejogMCB9LFxuICAgIH0sXG4gICAge1xuICAgICAgICBpZDogMTUyLFxuICAgICAgICBob3VzZTogJ3NpZ25hbCBzdDInLFxuICAgICAgICBrZXlob2xkZXJzOiBbXG4gICAgICAgICAgICB7IG5hbWU6ICdTYW0gU2hhbmtzJywgY2l0aXplbmlkOiAnV05QMTgzMjknIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdURXN0IFNoYW5rcycsIGNpdGl6ZW5pZDogJ1RBRjE4MzI5JyB9LFxuICAgICAgICBdLFxuICAgICAgICBsYWJlbDogJ1NpZ25hbCBTdCAyJyxcbiAgICAgICAgdGllcjogMSxcbiAgICAgICAgY29vcmRzOiB7XG4gICAgICAgICAgICBjYW06IHtcbiAgICAgICAgICAgICAgICBoOiA3My4wNTc3ODUwMzQxNzk2OSxcbiAgICAgICAgICAgICAgICB5YXc6IC0xMC4wLFxuICAgICAgICAgICAgICAgIHg6IDE1OC41OTUxODQzMjYxNzE4OCxcbiAgICAgICAgICAgICAgICB6OiA3LjIzOTY2MzYwMDkyMTYzLFxuICAgICAgICAgICAgICAgIHk6IC0yOTI4LjE0NjcyODUxNTYyNSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbnRlcjoge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHg6IDE1OC41OTUxODQzMjYxNzE4OCxcbiAgICAgICAgICAgICAgICB6OiA3LjIzOTY2MzYwMDkyMTYzLFxuICAgICAgICAgICAgICAgIHk6IC0yOTI4LjE0NjcyODUxNTYyNSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGdhcmFnZTogeyB5OiAwLCB4OiAwLCBoOiAwLCB6OiAwIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlkOiAxMzQsXG4gICAgICAgIGhvdXNlOiAnc2lnbmFsIHN0MicsXG4gICAgICAgIGtleWhvbGRlcnM6IFtcbiAgICAgICAgICAgIHsgbmFtZTogJ1NhbSBTaGFua3MnLCBjaXRpemVuaWQ6ICdXTlAxODMyOScgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ1RFc3QgU2hhbmtzJywgY2l0aXplbmlkOiAnVEFGMTgzMjknIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxhYmVsOiAnU2lnbmFsIFN0IDInLFxuICAgICAgICB0aWVyOiAxLFxuICAgICAgICBjb29yZHM6IHtcbiAgICAgICAgICAgIGNhbToge1xuICAgICAgICAgICAgICAgIGg6IDczLjA1Nzc4NTAzNDE3OTY5LFxuICAgICAgICAgICAgICAgIHlhdzogLTEwLjAsXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVudGVyOiB7XG4gICAgICAgICAgICAgICAgaDogNzMuMDU3Nzg1MDM0MTc5NjksXG4gICAgICAgICAgICAgICAgeDogMTU4LjU5NTE4NDMyNjE3MTg4LFxuICAgICAgICAgICAgICAgIHo6IDcuMjM5NjYzNjAwOTIxNjMsXG4gICAgICAgICAgICAgICAgeTogLTI5MjguMTQ2NzI4NTE1NjI1LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgZ2FyYWdlOiB7IHk6IDAsIHg6IDAsIGg6IDAsIHo6IDAgfSxcbiAgICB9LFxuXTtcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5pbXBvcnQgeyBhdG9tLCBzZWxlY3RvciwgdXNlUmVjb2lsU3RhdGUsIHVzZVJlY29pbFZhbHVlLCB1c2VTZXRSZWNvaWxTdGF0ZSB9IGZyb20gJ3JlY29pbCc7XG5pbXBvcnQgeyBNb2NrSG91c2VzLCBNb2NrTXlLZXlzIH0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzJztcbmltcG9ydCB7IGlzRW52QnJvd3NlciB9IGZyb20gJy4uL3V0aWxzL21pc2MnO1xuaW1wb3J0IGZldGNoTnVpIGZyb20gJy4uL3V0aWxzL2ZldGNoTnVpJztcbmV4cG9ydCB2YXIgaG91c2VTdGF0ZXMgPSB7XG4gICAgaG91c2VJdGVtczogYXRvbSh7XG4gICAgICAgIGtleTogJ2hvdXNlSXRlbScsXG4gICAgICAgIGRlZmF1bHQ6IHNlbGVjdG9yKHtcbiAgICAgICAgICAgIGtleTogJ2RlZmF1bHRIb3VzZUl0ZW1zJyxcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzcCwgZV8xO1xuICAgICAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9hLnRyeXMucHVzaChbMCwgMiwgLCAzXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2hOdWkoJ25wd2Q6cWItaG91c2luZzpnZXRQbGF5ZXJIb3VzZXMnKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcCA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc3AuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbm8gcmVzcG9uc2UgZGF0YScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgW11dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVzcC5kYXRhXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlXzEgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzRW52QnJvd3NlcigpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBNb2NrSG91c2VzXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlXzEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBbXV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6IHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7IH0sXG4gICAgICAgIH0pLFxuICAgIH0pLFxuICAgIG15S2V5czogYXRvbSh7XG4gICAgICAgIGtleTogJ215S2V5cycsXG4gICAgICAgIGRlZmF1bHQ6IHNlbGVjdG9yKHtcbiAgICAgICAgICAgIGtleTogJ2RlZmF1bHRNeUtleXMnLFxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXNwLCBlXzI7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2EudHJ5cy5wdXNoKFswLCAyLCAsIDNdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBmZXRjaE51aSgnbnB3ZDpxYi1ob3VzaW5nOmdldFBsYXllcktleXMnKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcCA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc3AuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbm8gcmVzcG9uc2UgZGF0YScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgW11dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVzcC5kYXRhXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlXzIgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzRW52QnJvd3NlcigpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBNb2NrTXlLZXlzXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlXzIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBbXV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6IHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7IH0sXG4gICAgICAgIH0pLFxuICAgIH0pLFxuICAgIHNlbGVjdGVkSG91c2U6IGF0b20oe1xuICAgICAgICBrZXk6ICdzZWxlY3RlZEhvdXNlJyxcbiAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICB9KSxcbiAgICBob3VzZUxpc3RNb2RhbDogYXRvbSh7XG4gICAgICAgIGtleTogJ2hvdXNlTGlzdE1vZGFsJyxcbiAgICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgfSksXG4gICAgbW9kYWxUeXBlOiBhdG9tKHtcbiAgICAgICAga2V5OiAnbW9kYWxUeXBlJyxcbiAgICAgICAgZGVmYXVsdDogJycsXG4gICAgfSksXG59O1xuZXhwb3J0IHZhciB1c2VIb3VzZXNWYWx1ZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVzZVJlY29pbFZhbHVlKGhvdXNlU3RhdGVzLmhvdXNlSXRlbXMpOyB9O1xuZXhwb3J0IHZhciB1c2VTZXRIb3VzZXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VTZXRSZWNvaWxTdGF0ZShob3VzZVN0YXRlcy5ob3VzZUl0ZW1zKTsgfTtcbmV4cG9ydCB2YXIgdXNlU2V0TW9kYWxWaXNpYmxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdXNlU2V0UmVjb2lsU3RhdGUoaG91c2VTdGF0ZXMuaG91c2VMaXN0TW9kYWwpOyB9O1xuZXhwb3J0IHZhciB1c2VNb2RhbFZpc2libGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VSZWNvaWxTdGF0ZShob3VzZVN0YXRlcy5ob3VzZUxpc3RNb2RhbCk7IH07XG5leHBvcnQgdmFyIHVzZVNlbGVjdGVkSG91c2VzVmFsdWUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VSZWNvaWxWYWx1ZShob3VzZVN0YXRlcy5zZWxlY3RlZEhvdXNlKTsgfTtcbmV4cG9ydCB2YXIgdXNlU2V0U2VsZWN0ZWRIb3VzZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVzZVNldFJlY29pbFN0YXRlKGhvdXNlU3RhdGVzLnNlbGVjdGVkSG91c2UpOyB9O1xuZXhwb3J0IHZhciB1c2VTZXRNb2RhbFR5cGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VTZXRSZWNvaWxTdGF0ZShob3VzZVN0YXRlcy5tb2RhbFR5cGUpOyB9O1xuZXhwb3J0IHZhciB1c2VNb2RhbFR5cGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VSZWNvaWxWYWx1ZShob3VzZVN0YXRlcy5tb2RhbFR5cGUpOyB9O1xuZXhwb3J0IHZhciB1c2VNeUtleXNWYWx1ZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVzZVJlY29pbFZhbHVlKGhvdXNlU3RhdGVzLm15S2V5cyk7IH07XG5leHBvcnQgdmFyIHVzZVNldE15S2V5cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVzZVNldFJlY29pbFN0YXRlKGhvdXNlU3RhdGVzLm15S2V5cyk7IH07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSE9VU0VfQVBQX1BSSU1BUllfQ09MT1IsIEhPVVNFX0FQUF9URVhUX0NPTE9SIH0gZnJvbSAnLi4vYXBwLnRoZW1lJztcbmltcG9ydCB7IFR5cG9ncmFwaHksIEJveCB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xudmFyIEhlYWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQm94LCB7IHB4OiAyLCBwdDogMiwgc3g6IHsgd2lkdGg6ICcxMDAlJywgdGV4dEFsaWduOiAnbGVmdCcsIGJhY2tncm91bmRDb2xvcjogSE9VU0VfQVBQX1BSSU1BUllfQ09MT1IgfSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFR5cG9ncmFwaHksIHsgc3g6IHsgY29sb3I6IEhPVVNFX0FQUF9URVhUX0NPTE9SIH0sIHBhcmFncmFwaDogdHJ1ZSwgdmFyaWFudDogJ2g1JyB9LCBcIlByb3BlcnRpZXNcIikpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlSG91c2VzVmFsdWUsIHVzZVNldE1vZGFsVHlwZSwgdXNlU2V0TW9kYWxWaXNpYmxlLCB1c2VTZXRTZWxlY3RlZEhvdXNlIH0gZnJvbSAnLi4vLi4vYXRvbXMvaG91c2UtYXRvbXMnO1xuaW1wb3J0IHsgQm94LCBMaXN0LCBMaXN0SXRlbSwgTGlzdEl0ZW1UZXh0LCBJY29uQnV0dG9uLCBUb29sdGlwIH0gZnJvbSAnQG11aS9tYXRlcmlhbCc7XG5pbXBvcnQgRG9uZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9Eb25lJztcbmltcG9ydCBDbG9zZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9DbG9zZSc7XG5pbXBvcnQgSG9tZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9Ib21lJztcbmltcG9ydCBLZXlJY29uIGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvS2V5JztcbmltcG9ydCBIb3VzZVNpZGluZ0ljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9Ib3VzZVNpZGluZyc7XG5pbXBvcnQgU3dhcEhvcml6SWNvbiBmcm9tICdAbXVpL2ljb25zLW1hdGVyaWFsL1N3YXBIb3Jpeic7XG52YXIgSG91c2VMaXN0ID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGlzRGFya01vZGUgPSBfYS5pc0RhcmtNb2RlO1xuICAgIHZhciBob3VzZXMgPSB1c2VIb3VzZXNWYWx1ZSgpO1xuICAgIHZhciBzZXRNb2RhbFZpc2libGUgPSB1c2VTZXRNb2RhbFZpc2libGUoKTtcbiAgICB2YXIgc2V0TW9kYWxUeXBlID0gdXNlU2V0TW9kYWxUeXBlKCk7XG4gICAgdmFyIHNldEhvdXNlID0gdXNlU2V0U2VsZWN0ZWRIb3VzZSgpO1xuICAgIHZhciBoYW5kbGVDbGljayA9IGZ1bmN0aW9uIChob3VzZSwgdHlwZSkge1xuICAgICAgICBzZXRNb2RhbFZpc2libGUodHJ1ZSk7XG4gICAgICAgIHNldEhvdXNlKGhvdXNlKTtcbiAgICAgICAgc2V0TW9kYWxUeXBlKHR5cGUpO1xuICAgIH07XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KExpc3QsIHsgZGlzYWJsZVBhZGRpbmc6IHRydWUsIHN4OiB7IG92ZXJmbG93OiAnYXV0bycgfSB9LCBob3VzZXMubWFwKGZ1bmN0aW9uIChob3VzZSkgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlzdEl0ZW0sIHsga2V5OiBob3VzZS5pZCwgZGl2aWRlcjogdHJ1ZSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJveCwgeyBzeDoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICB9IH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJveCwgeyBzeDoge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1cHgnLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICBnYXA6ICcyMHB4JyxcbiAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmdZOiAnMnB4JyxcbiAgICAgICAgICAgICAgICB9IH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChIb21lSWNvbiwgeyBzeDogeyBmb250U2l6ZTogMzIsIGNvbG9yOiBpc0RhcmtNb2RlID8gJyNmZmYnIDogJyMwMDAnIH0gfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCb3gsIHsgc3g6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luVG9wOiAnMnB4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdhcDogJzRweCcsXG4gICAgICAgICAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaXN0SXRlbVRleHQsIHsgcHJpbWFyeVR5cG9ncmFwaHlQcm9wczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc0RhcmtNb2RlID8gJyNmZmYnIDogJyMwMDAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB9IH0sIGhvdXNlLmxhYmVsKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAncm93JywgZ2FwOiAnMTJweCcgfSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCb3gsIHsgc3g6IHsgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAncm93JywgZ2FwOiAnNXB4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS2V5SWNvbiwgeyBzeDogeyBmb250U2l6ZTogMjAsIGNvbG9yOiBpc0RhcmtNb2RlID8gJyNmZmYnIDogJyMwMDAnIH0gfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaXN0SXRlbVRleHQsIHsgcHJpbWFyeVR5cG9ncmFwaHlQcm9wczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IGlzRGFya01vZGUgPyAnI2ZmZicgOiAnIzAwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE1cHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IH0sIGhvdXNlLmtleWhvbGRlcnMubGVuZ3RoKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJveCwgeyBzeDogeyBkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdyb3cnLCBnYXA6ICc1cHgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChIb3VzZVNpZGluZ0ljb24sIHsgc3g6IHsgZm9udFNpemU6IDIwLCBjb2xvcjogaXNEYXJrTW9kZSA/ICcjZmZmJyA6ICcjMDAwJyB9IH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChob3VzZS5nYXJhZ2UgJiYgaG91c2UuZ2FyYWdlLnggPT09IDAgJiYgaG91c2UuZ2FyYWdlLnogPT09IDApIHx8ICFob3VzZS5nYXJhZ2UgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChDbG9zZUljb24sIHsgc3g6IHsgZm9udFNpemU6IDE2LCBzdHJva2VXaWR0aDogMiwgY29sb3I6IGlzRGFya01vZGUgPyAnI2ZmZicgOiAnIzAwMCcgfSB9KSkgOiAoUmVhY3QuY3JlYXRlRWxlbWVudChEb25lSWNvbiwgeyBzeDogeyBmb250U2l6ZTogMTYsIHN0cm9rZVdpZHRoOiAyLCBjb2xvcjogaXNEYXJrTW9kZSA/ICcjZmZmJyA6ICcjMDAwJyB9IH0pKSkpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRvb2x0aXAsIHsgYXJyb3c6IHRydWUsIHRpdGxlOiBcIktleSBMaXN0XCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CdXR0b24sIHsgb25DbGljazogZnVuY3Rpb24gKCkgeyBoYW5kbGVDbGljayhob3VzZSwgXCJrZXlzXCIpOyB9IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS2V5SWNvbiwgbnVsbCkpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9vbHRpcCwgeyBhcnJvdzogdHJ1ZSwgdGl0bGU6IFwiVHJhbnNmZXJcIiB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbkJ1dHRvbiwgeyBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IGhhbmRsZUNsaWNrKGhvdXNlLCBcInRyYW5zZmVyXCIpOyB9IH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3dhcEhvcml6SWNvbiwgbnVsbCkpKSkpKTsgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBIb3VzZUxpc3Q7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCb3gsIEJ1dHRvbiwgVGV4dEZpZWxkIH0gZnJvbSAnQG11aS9tYXRlcmlhbCc7XG5pbXBvcnQgeyB1c2VIb3VzZUFQSSB9IGZyb20gJy4uLy4uLy4uL2hvb2tzL3VzZUhvdXNlQVBJJztcbmltcG9ydCB7IHVzZVNlbGVjdGVkSG91c2VzVmFsdWUsIHVzZVNldE1vZGFsVmlzaWJsZSB9IGZyb20gJy4uLy4uLy4uL2F0b21zL2hvdXNlLWF0b21zJztcbnZhciBUcmFuc2ZlciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2EgPSB1c2VTdGF0ZSgnJyksIHRyYW5zZmVySWQgPSBfYVswXSwgc2V0VHJhbnNmZXJJZCA9IF9hWzFdO1xuICAgIHZhciB0cmFuc2ZlckhvdXNlID0gdXNlSG91c2VBUEkoKS50cmFuc2ZlckhvdXNlO1xuICAgIHZhciBzZWxlY3RlZEhvdXNlID0gdXNlU2VsZWN0ZWRIb3VzZXNWYWx1ZSgpO1xuICAgIHZhciBzZXRNb2RhbFZpc2libGUgPSB1c2VTZXRNb2RhbFZpc2libGUoKTtcbiAgICB2YXIgaGFuZGxlSG91c2VUcmFuc2ZlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJhbnNmZXJIb3VzZShzZWxlY3RlZEhvdXNlLmhvdXNlLCB0cmFuc2ZlcklkKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNldE1vZGFsVmlzaWJsZShmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJveCwgeyBzeDoge1xuICAgICAgICAgICAgICAgIG1hcmdpblRvcDogJzI1cHgnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgZ2FwOiAnMTBweCcsXG4gICAgICAgICAgICB9IH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRleHRGaWVsZCwgeyBsYWJlbDogXCJDU05cIiwgdmFyaWFudDogXCJvdXRsaW5lZFwiLCBvbkNoYW5nZTogZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHNldFRyYW5zZmVySWQoZS50YXJnZXQudmFsdWUpOyB9IH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsgdmFyaWFudDogXCJvdXRsaW5lZFwiLCBjb2xvcjogXCJzdWNjZXNzXCIsIHNpemU6IFwibGFyZ2VcIiwgc3g6IHsgd2lkdGg6ICcxNTBweCcsIGhlaWdodDogJzQ1cHgnLCBtYXJnaW5Ub3A6ICcxMnB4JyB9LCBkaXNhYmxlZDogdHJhbnNmZXJJZC5sZW5ndGggIT09IDgsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhhbmRsZUhvdXNlVHJhbnNmZXIoKTsgfSB9LCBcIkNvbmZpcm1cIikpKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgVHJhbnNmZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IERlbGV0ZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9EZWxldGUnO1xuaW1wb3J0IHsgQm94LCBJY29uQnV0dG9uLCBMaXN0LCBMaXN0SXRlbSwgVHlwb2dyYXBoeSwgfSBmcm9tICdAbXVpL21hdGVyaWFsJztcbmltcG9ydCB7IHVzZUhvdXNlQVBJIH0gZnJvbSAnLi4vLi4vLi4vaG9va3MvdXNlSG91c2VBUEknO1xuaW1wb3J0IHsgdXNlU2VsZWN0ZWRIb3VzZXNWYWx1ZSB9IGZyb20gJy4uLy4uLy4uL2F0b21zL2hvdXNlLWF0b21zJztcbnZhciBLZXlzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciByZW1vdmVLZXkgPSB1c2VIb3VzZUFQSSgpLnJlbW92ZUtleTtcbiAgICB2YXIgc2VsZWN0ZWRIb3VzZSA9IHVzZVNlbGVjdGVkSG91c2VzVmFsdWUoKTtcbiAgICB2YXIgaGFuZGxlUmVtb3ZlS2V5ID0gZnVuY3Rpb24gKGNpdGl6ZW4pIHtcbiAgICAgICAgcmVtb3ZlS2V5KHNlbGVjdGVkSG91c2UuaG91c2UsIGNpdGl6ZW4pO1xuICAgIH07XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpc3QsIHsgc3g6IHtcbiAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6ICcxNTBweCcsXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6ICdhdXRvJyxcbiAgICAgICAgICAgIH0sIGRpc2FibGVQYWRkaW5nOiB0cnVlIH0sIHNlbGVjdGVkSG91c2Uua2V5aG9sZGVycy5tYXAoZnVuY3Rpb24gKGNpdGl6ZW4pIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KExpc3RJdGVtLCB7IGRpdmlkZXI6IHRydWUsIGtleTogY2l0aXplbi5jaXRpemVuaWQgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQm94LCB7IHN4OiB7IHdpZHRoOiAnMTAwJScsIGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyB9IH0sXG4gICAgICAgICAgICAgICAgY2l0aXplbi5uYW1lLmxlbmd0aCA+IDI1ID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoVHlwb2dyYXBoeSwgbnVsbCwgY2l0aXplbi5uYW1lLnNsaWNlKDAsIDI1KSArICcuLi4nKSkgOiAoUmVhY3QuY3JlYXRlRWxlbWVudChUeXBvZ3JhcGh5LCBudWxsLCBjaXRpemVuLm5hbWUpKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CdXR0b24sIHsgc3g6IHsgbWFyZ2luOiAnMHB4JywgcGFkZGluZzogJzBweCcgfSB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERlbGV0ZUljb24sIHsgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGFuZGxlUmVtb3ZlS2V5KGNpdGl6ZW4pOyB9IH0pKSkpKTsgfSkpKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgS2V5cztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQYXBlciB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgdXNlTW9kYWxWaXNpYmxlLCB1c2VTZWxlY3RlZEhvdXNlc1ZhbHVlLCB1c2VNb2RhbFR5cGUgfSBmcm9tICcuLi8uLi8uLi9hdG9tcy9ob3VzZS1hdG9tcyc7XG5pbXBvcnQgeyBCb3gsIEJ1dHRvbiwgRGl2aWRlciB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xuaW1wb3J0IFRyYW5zZmVyIGZyb20gJy4vVHJhbnNmZXInO1xuaW1wb3J0IEtleXMgZnJvbSAnLi9LZXlzJztcbnZhciBNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2EgPSB1c2VNb2RhbFZpc2libGUoKSwgbW9kYWxWaXNpYmxlID0gX2FbMF0sIHNldE1vZGFsVmlzaWJsZSA9IF9hWzFdO1xuICAgIHZhciBzZWxlY3RlZEhvdXNlID0gdXNlU2VsZWN0ZWRIb3VzZXNWYWx1ZSgpO1xuICAgIHZhciBtb2RhbFR5cGUgPSB1c2VNb2RhbFR5cGUoKTtcbiAgICBpZiAoIW1vZGFsVmlzaWJsZSB8fCAhc2VsZWN0ZWRIb3VzZSB8fCAhbW9kYWxUeXBlKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgaGFuZGxlQ2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNldE1vZGFsVmlzaWJsZShmYWxzZSk7XG4gICAgfTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFwZXIsIHsgc3g6IHtcbiAgICAgICAgICAgIHpJbmRleDogMTAsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIGxlZnQ6ICcwJyxcbiAgICAgICAgICAgIHJpZ2h0OiAnMCcsXG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiAnYXV0bycsXG4gICAgICAgICAgICBtYXJnaW5SaWdodDogJ2F1dG8nLFxuICAgICAgICAgICAgdG9wOiAnMjUlJyxcbiAgICAgICAgICAgIHdpZHRoOiAnNzUlJyxcbiAgICAgICAgICAgIG1pbkhlaWdodDogJzI1MHB4JyxcbiAgICAgICAgfSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJveCwgeyBzeDoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgbWFyZ2luVG9wOiAnMTBweCcsXG4gICAgICAgICAgICAgICAgY29sb3I6ICcjZGVkZWRlJyxcbiAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtOiAnY2FwaXRhbGl6ZScsXG4gICAgICAgICAgICB9IH0sIG1vZGFsVHlwZSksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGl2aWRlciwgeyBzeDogeyBwYWRkaW5nOiAnOHB4JyB9IH0pLFxuICAgICAgICBtb2RhbFR5cGUgPT09ICd0cmFuc2ZlcicgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2ZlciwgbnVsbCksXG4gICAgICAgIG1vZGFsVHlwZSA9PT0gJ2tleXMnICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoS2V5cywgbnVsbCksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQm94LCB7IHN4OiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBhbGlnblNlbGY6ICdmbGV4LWVuZCcsXG4gICAgICAgICAgICAgICAgcGI6ICcxMHB4JyxcbiAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IHZhcmlhbnQ6IFwib3V0bGluZWRcIiwgb25DbGljazogaGFuZGxlQ2xvc2UsIGNvbG9yOiBcImVycm9yXCIsIHNpemU6IFwic21hbGxcIiwgc3g6IHsgd2lkdGg6ICcxNTBweCcsIGhlaWdodDogJzQ1cHgnLCBtYXJnaW5Ub3A6ICcyNXB4JyB9IH0sIFwiQ2xvc2VcIikpKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4iLCJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdAbXVpL3N0eWxlcyc7XG52YXIgQmFja2Ryb3AgPSBzdHlsZWQoJ2RpdicpKHtcbiAgICBiYWNrZ3JvdW5kOiAnYmxhY2snLFxuICAgIG9wYWNpdHk6ICcwLjYnLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogMCxcbiAgICBsZWZ0OiAwLFxuICAgIHJpZ2h0OiAwLFxuICAgIGJvdHRvbTogMCxcbiAgICB6SW5kZXg6IDUsXG59KTtcbmV4cG9ydCBkZWZhdWx0IEJhY2tkcm9wO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VNb2RhbFZpc2libGUgfSBmcm9tICcuLi8uLi8uLi9hdG9tcy9ob3VzZS1hdG9tcyc7XG5pbXBvcnQgQmFja2Ryb3AgZnJvbSAnLi4vLi4vQmFja2Ryb3AnO1xudmFyIE1vZGFsQmFja2dyb3VuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2EgPSB1c2VNb2RhbFZpc2libGUoKSwgbW9kYWxWaXNpYmxlID0gX2FbMF0sIHNldE1vZGFsVmlzaWJsZSA9IF9hWzFdO1xuICAgIHJldHVybiBtb2RhbFZpc2libGUgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChCYWNrZHJvcCwgbnVsbCk7XG59O1xuZXhwb3J0IGRlZmF1bHQgbWVtbyhNb2RhbEJhY2tncm91bmQpO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQm90dG9tTmF2aWdhdGlvbiwgQm90dG9tTmF2aWdhdGlvbkFjdGlvbiB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgTmF2TGluaywgdXNlTG9jYXRpb24gfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IEhvbWUsIEtleSB9IGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvJztcbnZhciBIb3VzaW5nTmF2QmFyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXRobmFtZSA9IHVzZUxvY2F0aW9uKCkucGF0aG5hbWU7XG4gICAgdmFyIF9hID0gdXNlU3RhdGUocGF0aG5hbWUpLCBwYWdlID0gX2FbMF0sIHNldFBhZ2UgPSBfYVsxXTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQm90dG9tTmF2aWdhdGlvbiwgeyB2YWx1ZTogcGFnZSwgb25DaGFuZ2U6IGZ1bmN0aW9uIChldmVudCwgbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIHNldFBhZ2UobmV3VmFsdWUpO1xuICAgICAgICB9LCBzaG93TGFiZWxzOiB0cnVlLCBzeDoge1xuICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgfSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJvdHRvbU5hdmlnYXRpb25BY3Rpb24sIHsgbGFiZWw6IFwiSG91c2VzXCIsIHZhbHVlOiBcIi9ob3VzaW5nXCIsIGNvbXBvbmVudDogTmF2TGluaywgaWNvbjogUmVhY3QuY3JlYXRlRWxlbWVudChIb21lLCBudWxsKSwgdG86IFwiL2hvdXNpbmdcIiB9KSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCb3R0b21OYXZpZ2F0aW9uQWN0aW9uLCB7IGxhYmVsOiBcIktleXNcIiwgdmFsdWU6IFwiL2hvdXNpbmcva2V5c1wiLCBjb2xvcjogXCJzZWNvbmRhcnlcIiwgY29tcG9uZW50OiBOYXZMaW5rLCBpY29uOiBSZWFjdC5jcmVhdGVFbGVtZW50KEtleSwgbnVsbCksIHRvOiBcIi9ob3VzaW5nL2tleXNcIiB9KSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IEhvdXNpbmdOYXZCYXI7XG4iLCJpbXBvcnQgeyBMaXN0LCBMaXN0SXRlbSwgSWNvbkJ1dHRvbiwgTGlzdEl0ZW1JY29uLCBMaXN0SXRlbVRleHQgfSBmcm9tICdAbXVpL21hdGVyaWFsJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VNeUtleXNWYWx1ZSB9IGZyb20gJy4uLy4uL2F0b21zL2hvdXNlLWF0b21zJztcbmltcG9ydCBMb2NhdGlvbk9uSWNvbiBmcm9tICdAbXVpL2ljb25zLW1hdGVyaWFsL0xvY2F0aW9uT24nO1xuaW1wb3J0IEtleUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9LZXknO1xuaW1wb3J0IHsgdXNlSG91c2VBUEkgfSBmcm9tICcuLi8uLi9ob29rcy91c2VIb3VzZUFQSSc7XG52YXIgS2V5TGlzdCA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBpc0RhcmtNb2RlID0gX2EuaXNEYXJrTW9kZTtcbiAgICB2YXIga2V5cyA9IHVzZU15S2V5c1ZhbHVlKCk7XG4gICAgdmFyIHNldFdheXBvaW50ID0gdXNlSG91c2VBUEkoKS5zZXRXYXlwb2ludDtcbiAgICB2YXIgaGFuZGxlU2V0V2F5cG9pbnQgPSBmdW5jdGlvbiAoY29vcmRzKSB7XG4gICAgICAgIHNldFdheXBvaW50KGNvb3Jkcyk7XG4gICAgfTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlzdCwgeyBkaXNhYmxlUGFkZGluZzogdHJ1ZSB9LCBrZXlzLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChMaXN0SXRlbSwgeyBrZXk6IGtleS5pZCwgZGl2aWRlcjogdHJ1ZSwgc2Vjb25kYXJ5QWN0aW9uOiBSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CdXR0b24sIHsgZWRnZTogXCJlbmRcIiwgXCJhcmlhLWxhYmVsXCI6IFwid2F5cG9pbnRcIiwgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGFuZGxlU2V0V2F5cG9pbnQoa2V5LmNvb3Jkcyk7IH0gfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTG9jYXRpb25Pbkljb24sIG51bGwpKSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpc3RJdGVtSWNvbiwgeyBzeDogeyBtaW5XaWR0aDogXCIwcHhcIiwgbWFyZ2luUmlnaHQ6IFwiOHB4XCIgfSB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChLZXlJY29uLCBudWxsKSksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlzdEl0ZW1UZXh0LCB7IHByaW1hcnlUeXBvZ3JhcGh5UHJvcHM6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogaXNEYXJrTW9kZSA/ICcjZmZmJyA6ICcjMDAwJyxcbiAgICAgICAgICAgIH0sIHByaW1hcnk6IGtleS5sYWJlbCB9KSkpOyB9KSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IEtleUxpc3Q7XG4iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuaW1wb3J0IHsgdXNlU2V0SG91c2VzLCB1c2VTZXRTZWxlY3RlZEhvdXNlIH0gZnJvbSAnLi4vYXRvbXMvaG91c2UtYXRvbXMnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5leHBvcnQgdmFyIHVzZUhvdXNlQWN0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2V0SG91c2VzID0gdXNlU2V0SG91c2VzKCk7XG4gICAgdmFyIHNldFNlbGVjdGVkSG91c2UgPSB1c2VTZXRTZWxlY3RlZEhvdXNlKCk7XG4gICAgdmFyIGRlbGV0ZUxvY2FsSG91c2UgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoaG91c2VJZCkge1xuICAgICAgICBzZXRIb3VzZXMoZnVuY3Rpb24gKGN1ckhvdXNlKSB7IHJldHVybiBfX3NwcmVhZEFycmF5KFtdLCBjdXJIb3VzZSwgdHJ1ZSkuZmlsdGVyKGZ1bmN0aW9uIChob3VzZSkgeyByZXR1cm4gaG91c2UuaG91c2UgIT09IGhvdXNlSWQ7IH0pOyB9KTtcbiAgICB9LCBbXSk7XG4gICAgdmFyIGRlbGV0ZUtleUhvbGRlciA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChob3VzZUlkLCBjaXRpemVuSWQpIHtcbiAgICAgICAgc2V0SG91c2VzKGZ1bmN0aW9uIChjdXJIb3VzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGN1ckhvdXNlLm1hcChmdW5jdGlvbiAoaG91c2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaG91c2UuaG91c2UgPT09IGhvdXNlSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBob3VzZSksIHsga2V5aG9sZGVyczogaG91c2Uua2V5aG9sZGVycy5maWx0ZXIoZnVuY3Rpb24gKGtleUhvbGRlcikgeyByZXR1cm4ga2V5SG9sZGVyLmNpdGl6ZW5pZCAhPT0gY2l0aXplbklkOyB9KSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhvdXNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBzZXRTZWxlY3RlZEhvdXNlKGZ1bmN0aW9uIChjdXJIb3VzZSkge1xuICAgICAgICAgICAgaWYgKGN1ckhvdXNlLmhvdXNlID09PSBob3VzZUlkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBjdXJIb3VzZSksIHsga2V5aG9sZGVyczogY3VySG91c2Uua2V5aG9sZGVycy5maWx0ZXIoZnVuY3Rpb24gKGtleUhvbGRlcikgeyByZXR1cm4ga2V5SG9sZGVyLmNpdGl6ZW5pZCAhPT0gY2l0aXplbklkOyB9KSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjdXJIb3VzZTtcbiAgICAgICAgfSk7XG4gICAgfSwgW10pO1xuICAgIHJldHVybiB7IGRlbGV0ZUxvY2FsSG91c2U6IGRlbGV0ZUxvY2FsSG91c2UsIGRlbGV0ZUtleUhvbGRlcjogZGVsZXRlS2V5SG9sZGVyIH07XG59O1xuIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU25hY2tiYXIgfSBmcm9tICcuLi9zbmFja2Jhci91c2VTbmFja2Jhcic7XG5pbXBvcnQgZmV0Y2hOdWkgZnJvbSAnLi4vdXRpbHMvZmV0Y2hOdWknO1xuaW1wb3J0IHsgdXNlSG91c2VBY3Rpb25zIH0gZnJvbSAnLi91c2VIb3VzZUFjdGlvbnMnO1xuZXhwb3J0IHZhciB1c2VIb3VzZUFQSSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYWRkQWxlcnQgPSB1c2VTbmFja2JhcigpLmFkZEFsZXJ0O1xuICAgIHZhciBfYSA9IHVzZUhvdXNlQWN0aW9ucygpLCBkZWxldGVMb2NhbEhvdXNlID0gX2EuZGVsZXRlTG9jYWxIb3VzZSwgZGVsZXRlS2V5SG9sZGVyID0gX2EuZGVsZXRlS2V5SG9sZGVyO1xuICAgIHZhciBzZXRXYXlwb2ludCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChjb29yZHMpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXNwO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCBmZXRjaE51aSgnbnB3ZDpxYi1ob3VzaW5nOnNldFdheXBvaW50Jywge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29vcmRzOiBjb29yZHMuZW50ZXJcbiAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgcmVzcCA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3Auc3RhdHVzICE9PSAnb2snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgYWRkQWxlcnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHNldCB3YXlwb2ludCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFkZEFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgbWFya2VkIGhvdXNlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH0sIFthZGRBbGVydF0pO1xuICAgIHZhciByZW1vdmVLZXkgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoaG91c2UsIGtleWhvbGRlcikgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNwbGl0TmFtZSwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgcmVzcDtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgc3BsaXROYW1lID0ga2V5aG9sZGVyLm5hbWUuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lID0gc3BsaXROYW1lWzBdO1xuICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZSA9IHNwbGl0TmFtZVsxXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2hOdWkoJ25wd2Q6cWItaG91c2luZzpyZW1vdmVLZXlIb2xkZXInLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91c2U6IGhvdXNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhvbGRlckRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aXplbmlkOiBrZXlob2xkZXIuY2l0aXplbmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdE5hbWU6IGZpcnN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE5hbWU6IGxhc3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICByZXNwID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzcC5zdGF0dXMgIT09ICdvaycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBhZGRBbGVydCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gcmVtb3ZlIGtleScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFkZEFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgcmVtb3ZlZCBrZXknLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfSwgW2FkZEFsZXJ0LCBkZWxldGVLZXlIb2xkZXJdKTtcbiAgICB2YXIgdHJhbnNmZXJIb3VzZSA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChob3VzZSwgY2l0aXplbmlkKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmVzcDtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2hOdWkoJ25wd2Q6cWItaG91c2luZzp0cmFuc2ZlckhvdXNlJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgaG91c2U6IGhvdXNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2l0aXplbmlkOiBjaXRpemVuaWQsXG4gICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIHJlc3AgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwLnN0YXR1cyAhPT0gJ29rJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGFkZEFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byB0cmFuc2ZlciBob3VzZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZUxvY2FsSG91c2UoaG91c2UpO1xuICAgICAgICAgICAgICAgICAgICBhZGRBbGVydCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnU3VjY2Vzc2Z1bGx5IHRyYW5zZmVyZWQgaG91c2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTsgfSwgW2FkZEFsZXJ0LCBkZWxldGVMb2NhbEhvdXNlXSk7XG4gICAgcmV0dXJuIHsgdHJhbnNmZXJIb3VzZTogdHJhbnNmZXJIb3VzZSwgcmVtb3ZlS2V5OiByZW1vdmVLZXksIHNldFdheXBvaW50OiBzZXRXYXlwb2ludCB9O1xufTtcbiIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgUmVhY3QsIHsgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNdWlBbGVydCBmcm9tICdAbXVpL21hdGVyaWFsL0FsZXJ0JztcbmltcG9ydCB7IFR5cG9ncmFwaHkgfSBmcm9tICdAbXVpL21hdGVyaWFsJztcbmV4cG9ydCB2YXIgQWxlcnQgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE11aUFsZXJ0LCBfX2Fzc2lnbih7IHN4OiB7XG4gICAgICAgICAgICB6SW5kZXg6IDEwMDAwLFxuICAgICAgICB9LCBlbGV2YXRpb246IDQsIHZhcmlhbnQ6IFwiZmlsbGVkXCIgfSwgcHJvcHMsIHsgcmVmOiByZWYgfSksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVHlwb2dyYXBoeSwgeyBzeDoge1xuICAgICAgICAgICAgICAgIG1heFdpZHRoOiAnMzAwcHgnLFxuICAgICAgICAgICAgICAgIHdvcmRXcmFwOiAnYnJlYWstd29yZCcsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6ICcxLjFlbScsXG4gICAgICAgICAgICB9IH0sIHByb3BzLmNoaWxkcmVuKSkpO1xufSk7XG5leHBvcnQgZGVmYXVsdCBBbGVydDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTbmFja2JhciB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgdXNlU25hY2tiYXIgfSBmcm9tICcuL3VzZVNuYWNrYmFyJztcbmltcG9ydCBBbGVydCBmcm9tICcuL0FsZXJ0JztcbmV4cG9ydCB2YXIgUGhvbmVTbmFja2JhciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyIF9iID0gdXNlU25hY2tiYXIoKSwgYWxlcnQgPSBfYi5hbGVydCwgaXNPcGVuID0gX2IuaXNPcGVuLCBoYW5kbGVDbG9zZSA9IF9iLmhhbmRsZUNsb3NlO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChTbmFja2JhciwgeyBhdXRvSGlkZUR1cmF0aW9uOiAoX2EgPSBhbGVydCA9PT0gbnVsbCB8fCBhbGVydCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWxlcnQuZHVyYXRpb24pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDMwMDAsIG9wZW46IGlzT3Blbiwgc3g6IHtcbiAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIGJvdHRvbTogNzUsXG4gICAgICAgICAgICBsZWZ0OiAnMCAhaW1wb3J0YW50JyxcbiAgICAgICAgICAgIHJpZ2h0OiAnMCAhaW1wb3J0YW50JyxcbiAgICAgICAgfSwgb25DbG9zZTogaGFuZGxlQ2xvc2UgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChBbGVydCwgeyBzZXZlcml0eTogKGFsZXJ0ID09PSBudWxsIHx8IGFsZXJ0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhbGVydC50eXBlKSB8fCAnaW5mbycsIG9uQ2xvc2U6IGhhbmRsZUNsb3NlIH0sIChhbGVydCA9PT0gbnVsbCB8fCBhbGVydCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWxlcnQubWVzc2FnZSkgfHwgJycpKSk7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuZXhwb3J0IHZhciBTbmFja2JhckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xudmFyIFNuYWNrYmFyUHJvdmlkZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbjtcbiAgICB2YXIgX2IgPSB1c2VTdGF0ZShmYWxzZSksIG9wZW4gPSBfYlswXSwgc2V0T3BlbiA9IF9iWzFdO1xuICAgIHZhciBfYyA9IHVzZVN0YXRlKG51bGwpLCBhbGVydCA9IF9jWzBdLCBzZXRBbGVydCA9IF9jWzFdO1xuICAgIHZhciBzZXROZXdBbGVydCA9IGZ1bmN0aW9uIChhbGVydCkge1xuICAgICAgICBzZXRBbGVydChhbGVydCk7XG4gICAgICAgIHNldE9wZW4odHJ1ZSk7XG4gICAgfTtcbiAgICB2YXIgaGFuZGxlQ2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNldE9wZW4oZmFsc2UpO1xuICAgIH07XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFNuYWNrYmFyQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogeyBhbGVydDogYWxlcnQsIGFkZEFsZXJ0OiBzZXROZXdBbGVydCwgaGFuZGxlQ2xvc2U6IGhhbmRsZUNsb3NlLCBpc09wZW46IG9wZW4gfSB9LCBjaGlsZHJlbikpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNuYWNrYmFyUHJvdmlkZXI7XG4iLCJpbXBvcnQgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU25hY2tiYXJDb250ZXh0IH0gZnJvbSAnLi9TbmFja2JhclByb3ZpZGVyJztcbmV4cG9ydCB2YXIgdXNlU25hY2tiYXIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VDb250ZXh0KFNuYWNrYmFyQ29udGV4dCk7IH07XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuLyoqXG4gKiBTaW1wbGUgd3JhcHBlciBhcm91bmQgZmV0Y2ggQVBJIHRhaWxvcmVkIGZvciBDRUYvTlVJIHVzZS5cbiAqIEBwYXJhbSBldmVudE5hbWUgLSBUaGUgZW5kcG9pbnQgZXZlbnRuYW1lIHRvIHRhcmdldFxuICogQHBhcmFtIGRhdGEgLSBEYXRhIHlvdSB3aXNoIHRvIHNlbmQgaW4gdGhlIE5VSSBDYWxsYmFja1xuICpcbiAqIEByZXR1cm4gcmV0dXJuRGF0YSAtIEEgcHJvbWlzZSBmb3IgdGhlIGRhdGEgc2VudCBiYWNrIGJ5IHRoZSBOdWlDYWxsYmFja3MgQ0IgYXJndW1lbnRcbiAqL1xuaW1wb3J0IHsgaXNFbnZCcm93c2VyIH0gZnJvbSAnLi9taXNjJztcbmZ1bmN0aW9uIGZldGNoTnVpKGV2ZW50TmFtZSwgZGF0YSwgbW9ja1Jlc3ApIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBvcHRpb25zLCByZXNvdXJjZU5hbWUsIHJlc3AsIHJlc3BvbnNlT2JqO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRW52QnJvd3NlcigpICYmIG1vY2tSZXNwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbW9ja1Jlc3BdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZSA9IFwibnB3ZF9xYl9ob3VzaW5nXCI7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGZldGNoKFwiaHR0cHM6Ly9cIi5jb25jYXQocmVzb3VyY2VOYW1lLCBcIi9cIikuY29uY2F0KGV2ZW50TmFtZSksIG9wdGlvbnMpXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIHJlc3AgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlc3AuanNvbigpXTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlT2JqID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcmVzcG9uc2VPYmpdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZldGNoTnVpO1xuIiwiZXhwb3J0IHZhciBpc0VudkJyb3dzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnICYmICF3aW5kb3cuaW52b2tlTmF0aXZlO1xufTtcbmV4cG9ydCB2YXIgZ2V0UmVzb3VyY2VOYW1lID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB3aW5kb3cuR2V0UGFyZW50UmVzb3VyY2VOYW1lID8gd2luZG93ID09PSBudWxsIHx8IHdpbmRvdyA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2luZG93LkdldFBhcmVudFJlc291cmNlTmFtZSgpIDogJ25wd2QnO1xufTtcbmV4cG9ydCB2YXIgYnVpbGRSZXNwT2JqID0gZnVuY3Rpb24gKGRhdGEsIHN0YXR1cywgZXJyb3JNc2cpIHsgcmV0dXJuICh7XG4gICAgZGF0YTogZGF0YSxcbiAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICBlcnJvck1zZzogZXJyb3JNc2csXG59KTsgfTtcbiJdLCJuYW1lcyI6WyJNb2NrTXlLZXlzIiwiaWQiLCJsYWJlbCIsImNvb3JkcyIsImNhbSIsImgiLCJ5YXciLCJ4IiwieiIsInkiLCJlbnRlciIsIk1vY2tIb3VzZXMiLCJob3VzZSIsImtleWhvbGRlcnMiLCJuYW1lIiwiY2l0aXplbmlkIiwidGllciIsImdhcmFnZSIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwidmFsdWUiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJfX2dlbmVyYXRvciIsImJvZHkiLCJmIiwidCIsImciLCJfIiwic2VudCIsInRyeXMiLCJvcHMiLCJ2ZXJiIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJ0aGlzIiwibiIsInYiLCJvcCIsIlR5cGVFcnJvciIsImNhbGwiLCJwb3AiLCJsZW5ndGgiLCJwdXNoIiwiaG91c2VTdGF0ZXMiLCJob3VzZUl0ZW1zIiwiYXRvbSIsImtleSIsImRlZmF1bHQiLCJzZWxlY3RvciIsImdldCIsInJlc3AiLCJlXzEiLCJfYSIsImZldGNoTnVpIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIm15S2V5cyIsImVfMiIsInNlbGVjdGVkSG91c2UiLCJob3VzZUxpc3RNb2RhbCIsIm1vZGFsVHlwZSIsInVzZUhvdXNlc1ZhbHVlIiwidXNlUmVjb2lsVmFsdWUiLCJ1c2VTZXRIb3VzZXMiLCJ1c2VTZXRSZWNvaWxTdGF0ZSIsInVzZVNldE1vZGFsVmlzaWJsZSIsInVzZU1vZGFsVmlzaWJsZSIsInVzZVJlY29pbFN0YXRlIiwidXNlU2VsZWN0ZWRIb3VzZXNWYWx1ZSIsInVzZVNldFNlbGVjdGVkSG91c2UiLCJ1c2VTZXRNb2RhbFR5cGUiLCJ1c2VNb2RhbFR5cGUiLCJ1c2VNeUtleXNWYWx1ZSIsInB4IiwicHQiLCJzeCIsIndpZHRoIiwidGV4dEFsaWduIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3IiLCJwYXJhZ3JhcGgiLCJ2YXJpYW50IiwiaXNEYXJrTW9kZSIsImhvdXNlcyIsInNldE1vZGFsVmlzaWJsZSIsInNldE1vZGFsVHlwZSIsInNldEhvdXNlIiwiaGFuZGxlQ2xpY2siLCJ0eXBlIiwiZGlzYWJsZVBhZGRpbmciLCJvdmVyZmxvdyIsIm1hcCIsImRpdmlkZXIiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImJvcmRlclJhZGl1cyIsImdhcCIsInBhZGRpbmdZIiwiZm9udFNpemUiLCJtYXJnaW5Ub3AiLCJwcmltYXJ5VHlwb2dyYXBoeVByb3BzIiwic3Ryb2tlV2lkdGgiLCJhcnJvdyIsInRpdGxlIiwib25DbGljayIsInVzZVN0YXRlIiwidHJhbnNmZXJJZCIsInNldFRyYW5zZmVySWQiLCJ0cmFuc2ZlckhvdXNlIiwidXNlSG91c2VBUEkiLCJCb3giLCJUZXh0RmllbGQiLCJvbkNoYW5nZSIsInRhcmdldCIsIkJ1dHRvbiIsInNpemUiLCJoZWlnaHQiLCJkaXNhYmxlZCIsInJlbW92ZUtleSIsIkxpc3QiLCJtYXhIZWlnaHQiLCJjaXRpemVuIiwiTGlzdEl0ZW0iLCJUeXBvZ3JhcGh5Iiwic2xpY2UiLCJJY29uQnV0dG9uIiwibWFyZ2luIiwicGFkZGluZyIsIkRlbGV0ZSIsImhhbmRsZVJlbW92ZUtleSIsIm1vZGFsVmlzaWJsZSIsIlBhcGVyIiwiekluZGV4IiwicG9zaXRpb24iLCJsZWZ0IiwicmlnaHQiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJ0b3AiLCJtaW5IZWlnaHQiLCJ0ZXh0VHJhbnNmb3JtIiwiRGl2aWRlciIsImFsaWduU2VsZiIsInBiIiwiYmFja2dyb3VuZCIsIm9wYWNpdHkiLCJib3R0b20iLCJtZW1vIiwicGF0aG5hbWUiLCJ1c2VMb2NhdGlvbiIsInBhZ2UiLCJzZXRQYWdlIiwiZXZlbnQiLCJuZXdWYWx1ZSIsInNob3dMYWJlbHMiLCJjb21wb25lbnQiLCJOYXZMaW5rIiwiaWNvbiIsInRvIiwia2V5cyIsInNldFdheXBvaW50Iiwic2Vjb25kYXJ5QWN0aW9uIiwiZWRnZSIsIm1pbldpZHRoIiwicHJpbWFyeSIsIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwicyIsImkiLCJhcmd1bWVudHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJzZXRIb3VzZXMiLCJzZXRTZWxlY3RlZEhvdXNlIiwiYWRkQWxlcnQiLCJ1c2VTbmFja2JhciIsImRlbGV0ZUxvY2FsSG91c2UiLCJ1c2VDYWxsYmFjayIsImhvdXNlSWQiLCJjdXJIb3VzZSIsImZyb20iLCJwYWNrIiwiYXIiLCJsIiwiQXJyYXkiLCJjb25jYXQiLCJfX3NwcmVhZEFycmF5IiwiZmlsdGVyIiwiZGVsZXRlS2V5SG9sZGVyIiwiY2l0aXplbklkIiwia2V5SG9sZGVyIiwic3RhdHVzIiwibWVzc2FnZSIsImtleWhvbGRlciIsInNwbGl0TmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwic3BsaXQiLCJIb2xkZXJEYXRhIiwiZm9yd2FyZFJlZiIsInByb3BzIiwicmVmIiwiZWxldmF0aW9uIiwibWF4V2lkdGgiLCJ3b3JkV3JhcCIsImNoaWxkcmVuIiwiUGhvbmVTbmFja2JhciIsIl9iIiwiYWxlcnQiLCJpc09wZW4iLCJoYW5kbGVDbG9zZSIsIlNuYWNrYmFyIiwiYXV0b0hpZGVEdXJhdGlvbiIsImR1cmF0aW9uIiwib3BlbiIsIm9uQ2xvc2UiLCJzZXZlcml0eSIsIlNuYWNrYmFyQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJzZXRPcGVuIiwiX2MiLCJzZXRBbGVydCIsIlByb3ZpZGVyIiwidXNlQ29udGV4dCIsIlMiLCJldmVudE5hbWUiLCJtb2NrUmVzcCIsIm9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSIsImZldGNoIiwianNvbiIsImlzRW52QnJvd3NlciJdLCJzb3VyY2VSb290IjoiIn0=