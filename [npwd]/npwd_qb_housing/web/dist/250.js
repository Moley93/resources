"use strict";(self.webpackChunknpwd_qb_housing=self.webpackChunknpwd_qb_housing||[]).push([[250],{4121:(e,n,t)=>{t.d(n,{K:()=>l});var r=t(2950),a=t.n(r),o=t(6638),l=function(){return a().createElement(o.Z,{fontSize:"large"})}},9250:(e,n,t)=>{t.r(n),t.d(n,{externalAppConfig:()=>l,default:()=>c});var r=t(4023),a=t(4121),o=t(4274),l=function(){return{id:"housing",nameLocale:"Properties",color:"#fff",backgroundColor:o.Gy,path:"/housing",icon:a.K,app:r.Z,theme:o.rS}};const c=l},4023:(e,n,t)=>{t.d(n,{Z:()=>j});var r=t(2950),a=t.n(r),o=t(5475),l=t(3839),c=t.n(l),i=t(4810),u=t(1807),f=t(5137),m=t(1551),d=t(4714),s=t(602),h=t(9275),p=t(6235),g=t(4362),E=t(4582),Z=t(653),b=t(352),x=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},k=function(){return k=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},k.apply(this,arguments)},v=c().div(O||(O=x(["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"])),(function(e){return e.isDarkMode&&"\n    background-color: #121212;\n  "})),y=c().footer(P||(P=x(["\n  margin-top: auto;\n"],["\n  margin-top: auto;\n"]))),w=function(e){var n="dark"===e.theme.palette.mode;return a().createElement(s.Z,null,a().createElement(i.Z,{injectFirst:!0},a().createElement(u.Z,{theme:e.theme},a().createElement(d.v,null),a().createElement(v,{isDarkMode:n},a().createElement(m.Z,null),a().createElement(p.Switch,null,a().createElement(p.Route,{exact:!0,path:"/housing"},a().createElement(g.Z,{isDarkMode:n})),a().createElement(p.Route,{exact:!0,path:"/housing/keys"},a().createElement(E.Z,{isDarkMode:n}))),a().createElement(Z.Z,null),a().createElement(b.Z,null),a().createElement(y,null,a().createElement(h.Z,null))))))};const j=function(e){return a().createElement(o.NuiProvider,null,a().createElement(f.RecoilRoot,null,a().createElement(w,k({},e))))};var O,P},4274:(e,n,t)=>{t.d(n,{Gy:()=>o,cX:()=>l,rS:()=>c});var r=t(7095),a=t(6115),o=r.Z[500],l=a.Z.white,c={palette:{primary:{main:o,dark:r.Z[900],light:r.Z[500],contrastText:l},secondary:{main:r.Z[500],dark:r.Z[900],light:r.Z[500],contrastText:l}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,